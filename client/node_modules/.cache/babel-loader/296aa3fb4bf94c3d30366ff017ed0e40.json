{"ast":null,"code":"import _defineProperty from\"/Users/Nate/Desktop/LambdaSchoolWork/Projects/Auth-Friends/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/Nate/Desktop/LambdaSchoolWork/Projects/Auth-Friends/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/Nate/Desktop/LambdaSchoolWork/Projects/Auth-Friends/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{axiosWithAuth}from'../utils/axiosWithAuth.js';var Friend=function Friend(props){//state for our editted friend\nvar _useState=useState({name:props.friend.name,age:props.friend.age,email:props.friend.email}),_useState2=_slicedToArray(_useState,2),editFriend=_useState2[0],setEditFriend=_useState2[1];//state for out edit, false is not editing true is editing\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),edit=_useState4[0],setEdit=_useState4[1];//handle form changes\nvar handleChange=function handleChange(event){setEditFriend(_objectSpread({},editFriend,_defineProperty({},event.target.name,event.target.value)));console.log({editFriend:editFriend});};//submits the editted movie through a .put request\nvar submitEdit=function submitEdit(event){event.preventDefault();axiosWithAuth().put(\"/api/friends/\".concat(props.friend.id),editFriend).then(function(res){setEdit(false);props.setFriends(res.data);}).catch(function(err){return console.log(err);});};return(//renders movie card if edit is false and a form if it is true\nedit===false?/*#__PURE__*/React.createElement(\"div\",{className:\"friend-card\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Name: \",props.friend.name),/*#__PURE__*/React.createElement(\"h4\",null,\"Age: \",props.friend.age),/*#__PURE__*/React.createElement(\"h4\",null,\"Email: \",props.friend.email),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return props.deleteFriend(props.friend.id);}},\" Delete\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return setEdit(!edit);}},\" Edit\")):/*#__PURE__*/React.createElement(\"form\",{className:\"friend-card friends-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"edit-input\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Name: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"name\",placeholder:props.friend.name,onChange:handleChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"edit-input\"},/*#__PURE__*/React.createElement(\"h4\",null,\"Age: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"age\",placeholder:props.friend.age,onChange:handleChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"edit-input\"},/*#__PURE__*/React.createElement(\"h4\",null,\"Email: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"email\",name:\"email\",placeholder:props.friend.email,onChange:handleChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"edit-buttons\"},/*#__PURE__*/React.createElement(\"button\",{onClick:submitEdit},\"Submit\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return setEdit(!edit);}},\" Cancel \"))));};export default Friend;","map":{"version":3,"sources":["/Users/Nate/Desktop/LambdaSchoolWork/Projects/Auth-Friends/client/src/components/Friend.js"],"names":["React","useState","axiosWithAuth","Friend","props","name","friend","age","email","editFriend","setEditFriend","edit","setEdit","handleChange","event","target","value","console","log","submitEdit","preventDefault","put","id","then","res","setFriends","data","catch","err","deleteFriend"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { axiosWithAuth } from '../utils/axiosWithAuth.js'\n\n\nconst Friend = props => {\n\n    //state for our editted friend\n    const [editFriend, setEditFriend] = useState({ name: props.friend.name, age: props.friend.age, email: props.friend.email })\n    //state for out edit, false is not editing true is editing\n    const [edit, setEdit] = useState(false)\n    //handle form changes\n    const handleChange = event => {\n        setEditFriend({ ...editFriend, [event.target.name]: event.target.value })\n        console.log({editFriend})\n    };\n\n    //submits the editted movie through a .put request\n    const submitEdit = event =>{\n        event.preventDefault();\n        axiosWithAuth()\n        .put(`/api/friends/${props.friend.id}`, editFriend)\n        .then(res => {\n            setEdit(false);\n            props.setFriends(res.data)\n        })\n        .catch(err =>console.log(err))\n\n    }\n\n\n\n    return (\n        //renders movie card if edit is false and a form if it is true\n        edit === false ?\n            <div className='friend-card'>\n                <h3>Name: {props.friend.name}</h3>\n                <h4>Age: {props.friend.age}</h4>\n                <h4>Email: {props.friend.email}</h4>\n                <button onClick={() => props.deleteFriend(props.friend.id)}> Delete</button>\n                <button onClick={() => setEdit(!edit)}> Edit</button>\n            </div> :\n            <form className='friend-card friends-container'>\n                <div className='edit-input'>\n                    <h3>Name: </h3>\n                    <input type='text' name='name' placeholder={props.friend.name} onChange={handleChange} />\n                </div>\n                <div className='edit-input'>\n                    <h4>Age: </h4>\n                    <input type='text' name='age' placeholder={props.friend.age} onChange={handleChange} />\n                </div>\n                <div className='edit-input'>\n                    <h4>Email: </h4>\n                    <input type='email' name='email' placeholder={props.friend.email} onChange={handleChange} />\n                </div>\n                <div className='edit-buttons'>\n                <button onClick={ submitEdit}>Submit</button>\n                <button onClick={() => setEdit(!edit)}> Cancel </button>\n                </div>\n            </form>\n\n\n    )\n}\n\nexport default Friend;"]},"metadata":{},"sourceType":"module"}