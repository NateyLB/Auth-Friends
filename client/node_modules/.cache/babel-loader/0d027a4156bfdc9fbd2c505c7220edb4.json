{"ast":null,"code":"var _jsxFileName = \"/Users/Nate/Desktop/LambdaSchoolWork/Projects/Auth-Friends/auth-friends/src/components/PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\"; // Requirements:\n// 1. It has the same API as <Route />.\n// 2. It renders a <Route /> and passes all the props through to it.\n// 3. It checks if the user is authenticated, if they are, it renders\n// the “component” prop. If not, it redirects the user to /login.\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  console.log({ ...rest\n  }, \"rest\");\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (localStorage.getItem(\"token\")) {\n        return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 18\n          }\n        })); // render component passed into props\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 18\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/Nate/Desktop/LambdaSchoolWork/Projects/Auth-Friends/auth-friends/src/components/PrivateRoute.js"],"names":["React","Route","Redirect","PrivateRoute","component","Component","rest","console","log","props","localStorage","getItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAY,EAAC,GAAGF;AAAJ,GAAZ,EAAuB,MAAvB;AACA,sBACE,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAEG,KAAK,IAAI;AACf,UAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AACjC,4BAAO,oBAAC,SAAD,oBAAeF,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP,CADiC,CACA;AAClC,OAFD,MAEO;AACL,4BAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAYD,CAdD;;AAeA,eAAeN,YAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n// Requirements:\n// 1. It has the same API as <Route />.\n// 2. It renders a <Route /> and passes all the props through to it.\n// 3. It checks if the user is authenticated, if they are, it renders\n// the “component” prop. If not, it redirects the user to /login.\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  console.log({...rest}, \"rest\")\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (localStorage.getItem(\"token\")) {\n          return <Component {...props} />; // render component passed into props\n        } else {\n          return <Redirect to=\"/login\" />;\n        }\n      }}\n    />\n  );\n};\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}